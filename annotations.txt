# Generar documentación de swagger laravel
php artisan l5-swagger:generate

ATL-369-changes-services-vehicles-datatables

"php": "^7.3|^8.0",

# Obtener información actual del token
$request->user()->currentAccessToken();

# Relations Vehicle

    public function latestState()
    {


        return $this->belongsToMany(
            State::class,
            'vehicles_states',
            'vehicle_id',
            'state_id'
        )
            ->withTimestamps()
            ->orderByPivot('id', 'desc')
            ->orderByPivot('created_at', 'desc')
            ->take(1);

    }


    public function latestStage()
    {
        return $this->belongsToMany(
            Stage::class,
            'vehicles_stages',
            'vehicle_id',
            'stage_id'
        )
        ->withPivot('manual', 'tracking_date')
        ->withTimestamps()
        ->orderByPivot('id', 'desc')
        ->orderByPivot('created_at', 'desc')
        ->take(1);
     }


******* VEHICLES MODEL ******
//    /**
//     * Último State del vehículo.
//     *
//     * @return BelongsToMany
//     */
//    public function latestState(): BelongsToMany
//    {
//        return $this->belongsToMany(
//            State::class,
//            'vehicles_states',
//            'vehicle_id',
//            'state_id'
//        )
//            ->join("vehicles", "vehicles_states.vehicle_id", "=", "vehicles.id")
//            ->where("vehicles_states.id", "=", DB::raw("
//            (
//                SELECT
//                    vs.id
//                FROM
//                    vehicles_states AS vs
//                WHERE
//                    vs.vehicle_id = vehicles.id
//                ORDER BY
//                    vs.id DESC
//                LIMIT 1
//            )
//        "));
//    }


public function latestStage(): BelongsToMany
    {
        return $this->belongsToMany(
            Stage::class,
            'vehicles_stages',
            'vehicle_id',
            'stage_id'
        )
        ->join("vehicles", "vehicles_stages.vehicle_id", "=", "vehicles.id")
        ->where("vehicles_stages.id", "=", DB::raw("
            (
                SELECT
                    vs.id
                FROM
                    vehicles_stages AS vs
                WHERE
                    vs.vehicle_id = vehicles.id
                ORDER BY
                    vs.id DESC
                LIMIT 1
            )
        "));
    }
